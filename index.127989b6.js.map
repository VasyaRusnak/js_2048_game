{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["// main.js\n// src/modules/Game.class.js\n\"use strict\";\nclass $a5fd07fa01589658$export$2e2bcd8739ae039 {\n    constructor(size = 4){\n        this.size = size;\n        this.score = 0;\n        this.status = \"idle\";\n        this.board = this.createBoard();\n    }\n    createBoard() {\n        return Array.from({\n            length: this.size\n        }, ()=>Array(this.size).fill(0));\n    }\n    start() {\n        this.score = 0;\n        this.status = \"playing\";\n        this.board = this.createBoard();\n        this.addRandomTile();\n        this.addRandomTile();\n    }\n    restart() {\n        this.start();\n    }\n    getBoard() {\n        return this.board;\n    }\n    getScore() {\n        return this.score;\n    }\n    getStatus() {\n        return this.status;\n    }\n    slideAndCombineRow(inputRow) {\n        let newRow = inputRow.filter((n)=>n !== 0); // копія для редагування\n        for(let i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow[i + 1] = 0;\n        }\n        newRow = newRow.filter((n)=>n !== 0);\n        while(newRow.length < this.size)newRow.push(0);\n        return newRow;\n    }\n    moveLeft() {\n        let moved = false;\n        for(let row = 0; row < this.size; row++){\n            const newRow = this.slideAndCombineRow(this.board[row]);\n            if (!moved && newRow.some((val, idx)=>val !== this.board[row][idx])) moved = true;\n            this.board[row] = newRow;\n        }\n        if (moved) this.addRandomTile();\n        this.checkStatus();\n    }\n    moveRight() {\n        let moved = false;\n        for(let row = 0; row < this.size; row++){\n            const newRow = this.slideAndCombineRow(this.board[row].slice().reverse()).reverse();\n            if (!moved && newRow.some((val, idx)=>val !== this.board[row][idx])) moved = true;\n            this.board[row] = newRow;\n        }\n        if (moved) this.addRandomTile();\n        this.checkStatus();\n    }\n    moveUp() {\n        this.transpose();\n        this.moveLeft();\n        this.transpose();\n    }\n    moveDown() {\n        this.transpose();\n        this.moveRight();\n        this.transpose();\n    }\n    transpose() {\n        this.board = this.board[0].map((_, i)=>this.board.map((row)=>row[i]));\n    }\n    checkStatus() {\n        if (this.board.flat().includes(2048)) {\n            this.status = \"win\";\n            return;\n        }\n        if (!this.canMove()) this.status = \"lose\";\n    }\n    addRandomTile() {\n        const empty = [];\n        for(let rowIdx = 0; rowIdx < this.size; rowIdx++){\n            for(let colIdx = 0; colIdx < this.size; colIdx++)if (this.board[rowIdx][colIdx] === 0) empty.push({\n                r: rowIdx,\n                c: colIdx\n            });\n        }\n        if (!empty.length) return;\n        const { r: r, c: c } = empty[Math.floor(Math.random() * empty.length)];\n        this.board[r][c] = Math.random() < 0.1 ? 4 : 2;\n    }\n    canMove() {\n        for(let rowIdx = 0; rowIdx < this.size; rowIdx++)for(let colIdx = 0; colIdx < this.size; colIdx++){\n            if (this.board[rowIdx][colIdx] === 0) return true;\n            if (colIdx < this.size - 1 && this.board[rowIdx][colIdx] === this.board[rowIdx][colIdx + 1]) return true;\n            if (rowIdx < this.size - 1 && this.board[rowIdx][colIdx] === this.board[rowIdx + 1][colIdx]) return true;\n        }\n        return false;\n    }\n}\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$game = new (0, $a5fd07fa01589658$export$2e2bcd8739ae039)();\nconst $09e991522ca7e64e$var$cells = document.querySelectorAll(\".field-cell\");\nconst $09e991522ca7e64e$var$scoreEl = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$startBtn = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nfunction $09e991522ca7e64e$var$render() {\n    const board = $09e991522ca7e64e$var$game.getBoard();\n    $09e991522ca7e64e$var$cells.forEach((cell, index)=>{\n        const row = Math.floor(index / 4);\n        const col = index % 4;\n        const value = board[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell\" + (value ? ` field-cell--${value}` : \"\");\n    });\n    $09e991522ca7e64e$var$scoreEl.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$messageStart.classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"idle\");\n    $09e991522ca7e64e$var$messageWin.classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"win\");\n    $09e991522ca7e64e$var$messageLose.classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"lose\");\n    // зміна тексту і класу кнопки\n    if ($09e991522ca7e64e$var$game.getStatus() === \"idle\") {\n        $09e991522ca7e64e$var$startBtn.textContent = \"Start\";\n        $09e991522ca7e64e$var$startBtn.classList.add(\"start\");\n        $09e991522ca7e64e$var$startBtn.classList.remove(\"restart\");\n    } else {\n        $09e991522ca7e64e$var$startBtn.textContent = \"Restart\";\n        $09e991522ca7e64e$var$startBtn.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startBtn.classList.add(\"restart\");\n    }\n}\n// клік по кнопці\n$09e991522ca7e64e$var$startBtn.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === \"idle\") $09e991522ca7e64e$var$game.start();\n    else $09e991522ca7e64e$var$game.restart();\n    $09e991522ca7e64e$var$render();\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    if ($09e991522ca7e64e$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $09e991522ca7e64e$var$render();\n});\n// перший рендер (idle)\n$09e991522ca7e64e$var$render();\n\n\n//# sourceMappingURL=index.127989b6.js.map\n","// main.js\n'use strict';\n\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreEl = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction render() {\n  const board = game.getBoard();\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = board[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = 'field-cell' + (value ? ` field-cell--${value}` : '');\n  });\n\n  scoreEl.textContent = game.getScore();\n  messageStart.classList.toggle('hidden', game.getStatus() !== 'idle');\n  messageWin.classList.toggle('hidden', game.getStatus() !== 'win');\n  messageLose.classList.toggle('hidden', game.getStatus() !== 'lose');\n\n  // зміна тексту і класу кнопки\n  if (game.getStatus() === 'idle') {\n    startBtn.textContent = 'Start';\n    startBtn.classList.add('start');\n    startBtn.classList.remove('restart');\n  } else {\n    startBtn.textContent = 'Restart';\n    startBtn.classList.remove('start');\n    startBtn.classList.add('restart');\n  }\n}\n\n// клік по кнопці\nstartBtn.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n  } else {\n    game.restart();\n  }\n  render();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n  render();\n});\n\n// перший рендер (idle)\nrender();\n","// src/modules/Game.class.js\n'use strict';\n\nexport default class Game {\n  constructor(size = 4) {\n    this.size = size;\n    this.score = 0;\n    this.status = 'idle';\n    this.board = this.createBoard();\n  }\n\n  createBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  start() {\n    this.score = 0;\n    this.status = 'playing';\n    this.board = this.createBoard();\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.start();\n  }\n\n  getBoard() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  slideAndCombineRow(inputRow) {\n    let newRow = inputRow.filter((n) => n !== 0); // копія для редагування\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n      }\n    }\n\n    newRow = newRow.filter((n) => n !== 0);\n\n    while (newRow.length < this.size) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let row = 0; row < this.size; row++) {\n      const newRow = this.slideAndCombineRow(this.board[row]);\n\n      if (!moved && newRow.some((val, idx) => val !== this.board[row][idx])) {\n        moved = true;\n      }\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkStatus();\n  }\n\n  moveRight() {\n    let moved = false;\n\n    for (let row = 0; row < this.size; row++) {\n      const newRow = this.slideAndCombineRow(\n        this.board[row].slice().reverse(),\n      ).reverse();\n\n      if (!moved && newRow.some((val, idx) => val !== this.board[row][idx])) {\n        moved = true;\n      }\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkStatus();\n  }\n\n  moveUp() {\n    this.transpose();\n    this.moveLeft();\n    this.transpose();\n  }\n\n  moveDown() {\n    this.transpose();\n    this.moveRight();\n    this.transpose();\n  }\n\n  transpose() {\n    this.board = this.board[0].map((_, i) => this.board.map((row) => row[i]));\n  }\n\n  checkStatus() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n\n      return;\n    }\n\n    if (!this.canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  addRandomTile() {\n    const empty = [];\n\n    for (let rowIdx = 0; rowIdx < this.size; rowIdx++) {\n      for (let colIdx = 0; colIdx < this.size; colIdx++) {\n        if (this.board[rowIdx][colIdx] === 0) {\n          empty.push({ r: rowIdx, c: colIdx });\n        }\n      }\n    }\n\n    if (!empty.length) {\n      return;\n    }\n\n    const { r, c } = empty[Math.floor(Math.random() * empty.length)];\n\n    this.board[r][c] = Math.random() < 0.1 ? 4 : 2;\n  }\n\n  canMove() {\n    for (let rowIdx = 0; rowIdx < this.size; rowIdx++) {\n      for (let colIdx = 0; colIdx < this.size; colIdx++) {\n        if (this.board[rowIdx][colIdx] === 0) {\n          return true;\n        }\n\n        if (\n          colIdx < this.size - 1 &&\n          this.board[rowIdx][colIdx] === this.board[rowIdx][colIdx + 1]\n        ) {\n          return true;\n        }\n\n        if (\n          rowIdx < this.size - 1 &&\n          this.board[rowIdx][colIdx] === this.board[rowIdx + 1][colIdx]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n"],"names":["$09e991522ca7e64e$var$game","constructor","size","score","status","board","createBoard","Array","from","length","fill","start","addRandomTile","restart","getBoard","getScore","getStatus","slideAndCombineRow","inputRow","newRow","filter","n","i","push","moveLeft","moved","row","some","val","idx","checkStatus","moveRight","slice","reverse","moveUp","transpose","moveDown","map","_","flat","includes","canMove","empty","rowIdx","colIdx","r","c","Math","floor","random","$09e991522ca7e64e$var$cells","document","querySelectorAll","$09e991522ca7e64e$var$scoreEl","querySelector","$09e991522ca7e64e$var$startBtn","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$render","forEach","cell","index","value","textContent","className","classList","toggle","add","remove","addEventListener","e","key"],"version":3,"file":"index.127989b6.js.map"}